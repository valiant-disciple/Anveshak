#include <SFE_BMP180.h>
#include <dht11.h> 
#include <Wire.h>
#include <ros.h>
#include <std_msgs/Float32.h>
#include <std_msgs/UInt8.h>
#define DHT11PIN 34

SFE_BMP180 temp;
dht11 DHT11;

ros::NodeHandle nh;
std_msgs::Float32 bmp180_temperature_msg;
std_msgs::Float32 bmp180_pressure_msg;
std_msgs::Float32 dht11_humidity_msg;
ros::Publisher bmp180_temperature("bmp180_temperature",&bmp180_temperature_msg);
ros::Publisher bmp180_pressure("bmp180_pressure",&bmp180_pressure_msg);
ros::Publisher dht11_humidity("dht11_humidity",&dht11_humidity_msg);

void pump_l_callback(const std_msgs::UInt8& msg)
{
  int status = msg.data
  if status == 1:
    digitalWrite(14, HIGH);
    delay(4000);
    digitalWrite(14, LOW);
}

ros::Subscriber<std_msgs::UInt8> pump_l_status("pump_l_status", &pump_l_callback);

void setup() {
  pinMode(14, OUTPUT);
  digitalWrite(14, LOW);
  nh.getHardware()->setBaud(115200);
  nh.initNode();
  nh.advertise(bmp180_temperature);
  nh.advertise(bmp180_pressure);
  nh.advertise(dht11_humidity);
  if (temp.begin()){}
  else while(1);
}

void loop(){
  digitalWrite(DIR, HIGH);

  // BMP180 temperature and pressure data
  char status;
  double T,P,p0;
  status = temp.startTemperature();
  if (status != 0){
    delay(status);
    status = temp.getTemperature(T);
    if (status != 0){
      bmp180_temperature_msg.data=(float)T;
      status = temp.startPressure(3);
      if (status != 0){
        delay(status);
        status = temp.getPressure(P,T);
        if (status != 0) bmp180_pressure_msg.data=(float)P;
      }
    }
  }

  // DHT11 humidity data
  dht11_humidity_msg.data = (float)DHT11.temperature;

  nh.spinOnce();
  bmp180_temperature.publish(&bmp180_temperature_msg);
  bmp180_pressure.publish(&bmp180_pressure_msg);
  dht11_humidity.publish(&dht11_humidity_msg);
  delay(500);
}

